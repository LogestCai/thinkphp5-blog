<?php

namespace app\admin\controller;
use app\admin\service\ArticleService;
use app\admin\service\UploadService;
use think\Db;
use org\Qiniu;

class Article extends Base
{
    //项目初始化操作
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        //赋值service
//        $serviceName = ucfirst($controller).'Service';
        $this->_service = new ArticleService();
    }
    /**
     * [index 文章列表]
     * @author
     */
    public function index(){
        $artRes = $this->_service->index();
        $this->assign('artRes',$artRes);
       // var_dump($artRes);exit;

        return $this->fetch();
    }

    public function uploadFile()
    {
        //return json(['success'=>1,'message'=>'chengg','url'=>'']);
        $this->_service=new UploadService();
        return $this->_service->uploadLocality('editormd-image-file');
    }

    //tableSelect测试数据
    public function getUserData(){
        if(request()->isGet ()){
            extract(input());
            $map = [];
            if(isset($keyword)&&$keyword!=""){
                $map['name'] = ['like',"%" . $keyword . "%"];
            }
            $Nowpage = input('get.page') ? input('get.page'):1;
            $limits = input("limit")?input("limit"):10;
            $count = Db::name('test')->where($map)->count();//计算总页面
            $lists = Db::name('test')
                ->where($map)
                ->page($Nowpage,$limits)
                ->select();
            return json(['code'=>220,'msg'=>'','count'=>$count,'data'=>$lists]);
        }
        if(request()->isPost ()){
            $data = Db::name('test')
                ->where('id','in',input('id'))
                ->select();
            return json(['code'=>200,'data'=>$data]);
        }
    }

    //更改发布状态
    public function change_pub_status()
    {
       $servic = new ArticleService();
       return $servic->change_article_pub_status();
    }

    //更改图片状态
    public function change_img_status()
    {
        $servic = new ArticleService();
        return $servic->change_article_img_status();
    }
    //更改推荐状态
    public function change_tui_status()
    {
        $servic = new ArticleService();
        return $servic->change_article_tui_status();
    }
    //更改热门状态
    public function change_hot_status()
    {
        $servic = new ArticleService();
        return $servic->change_article_hot_status();
    }


    /**
     * [add_article 添加文章]
     * @return [type] [description]
     * @author
     */
    public function add_article()
    {
        $template = '_article_add';
        /*
         * array(8) { ["catename"]=> string(0) "" ["cate_id"]=> string(1) "1" ["tags"]=> array(1) { [0]=> string(0) "" } ["views"]=> string(0) "" ["orderby"]=> string(0) "" ["writer"]=> string(0) "" ["test-editor-markdown-doc"]=> string(259) "![](/uploads/images/20191101\5ed16ab10a53241b3e868d5b5882fca6.jpg) ## 关于 Editor.md **Editor.md** 是一款开源的、可嵌入的 Markdown 在线编辑器（组件），基于 CodeMirror、jQuery 和 Marked 构建。 " ["test-editor-html-code"]=> string(397) "
        */
        $article = [];
        $tags = [];
        if(request()->isPost()){
            return $this->_service->add_article();
        }
        //如果存在文章id则展示内容
        $article_id = request()->route('id');
        if(intval($article_id)>0)
        {
            $article = $this->_service->getOneArticle($article_id);
            $tags = $this->_service->getArticleTagsById($article_id);
            $template = '_article_edit';
        }
        //获取文章栏目信息
        $cateRes = $this->_service->index_cate();
        //var_dump($cateRes);exit;
        $this->assign('cateRes',$cateRes);
        $this->assign('article',$article);
        $this->assign('tags',$tags);
        return view($template);
    }

    //缩略图上传处理
    public function upLoadThumbImg()
    {
        $this->_service=new UploadService();
        $res =  $this->_service->uploadLocality('img');
        $res =  json_decode($res->getContent(),true);
        return  json(['status'=>$res['success'],'msg'=>$res['message'],'url'=>$res['url']]);
    }


    /**
     * [edit_article 编辑文章]
     * @return [type] [description]
     * @author
     */
    public function edit_article()
    {
        $article = new ArticleModel();
        if(request()->isPost()){
            $param = input('post.');
            $imgs = explode(',',$param['del']);
            foreach($imgs as $vo){
                $add = str_replace ('http://p73q8jzf0.bkt.clouddn.com/','',$vo);
                $up = new Qiniu();
                $up->delFile($add,'kevin');
            }
            $param['photo'] = trim($param['photo'],',');
            $flag = $article->updateArticle($param);
            return json(['code' => $flag['code'], 'data' => $flag['data'], 'msg' => $flag['msg']]);
        }

        $id = input('param.id');
        $cate = new ArticleCateModel();
        $data = $article->getOneArticle($id);
        if(!empty($data['photo'])){
            $data['photo'] = trim($data['photo'],',');
//            $img = explode(',',$data['photo']);
//            foreach($img as $vo){
//                $photo[] = '/uploads/images/'.$vo;
//            }
            $data['imges'] = $data['photo'];
        }else{
            $data['photo'] = '';
            $data['imges'] = '';
        }
        $this->assign('cate',$cate->getCate());
        $this->assign('article',$data);
        return $this->fetch();
    }


    /**
     * [del_article 删除文章]
     * @return [type] [description]
     * @author
     */
    public function del_article()
    {
        $id = input('param.id');
        return $this->_service->del_article($id);
        //1916865
        //return json(['code' => $flag['code'], 'data' => $flag['data'], 'msg' => $flag['msg']]);
    }




    //*********************************************分类管理*********************************************//

    /**
     * [index_cate 分类列表]
     * @return [type] [description]
     * @author
     */
    public function index_cate(){
        if(request()->isAjax ())
        {
            return $this->_service->index_cate();
        }
        $cateRes = $this->_service->index_cate();
        $this->assign('cateRes',$cateRes);
        return $this->fetch("article/index_cate");
    }


    /**
     * [add_cate 添加分类]
     * @return [type] [description]
     * @author
     */
    public function add_cate()
    {
        $template = '_cate_add';
        if(request()->isPost()){
           return $this->_service->add_cate();
        }
        $cateCurr = [];
        //如果存在文章id则展示内容
        $cate_id = request()->route('id');
        if(intval($cate_id)>0)
        {
            $cateCurr = $this->_service->getOneCate($cate_id);
            $template = '_cate_edit';
        }
        //获取文章栏目信息
        $cateRes = $this->_service->index_cate();
        //var_dump($cateRes);exit;
        $this->assign('cateRes',$cateRes);
        $this->assign('cateCurr',$cateCurr);
        return view($template);
    }




    /**
     * [del_cate 删除分类]
     * @return [type] [description]
     * @author
     */
    public function del_cate()
    {

        return $this->_service->del_cate();

    }



    public function printOrder(){
        return $this->fetch('article/order');
    }
}